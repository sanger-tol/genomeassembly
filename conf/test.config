/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running minimal tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a fast and simple pipeline test.

    Use as follows:
        nextflow run nf-core/sanger-tol-genomeassembly -profile test,<docker/singularity> --outdir <OUTDIR>

----------------------------------------------------------------------------------------
*/

params {
    config_profile_name        = 'Test profile'
    config_profile_description = 'Minimal test dataset to check pipeline function'

    // Limit resources so that this can run on GitHub Actions

    // Input data
    // TODO nf-core: Specify the paths to your test data on nf-core/test-datasets
    // TODO nf-core: Give any required params for the test so that command line flags are not needed
    input = "${projectDir}/assets/test.yaml"
    groups = 10
}

process {

    withName: LONGRANGER_ALIGN {

        ext.args = "--disable-ui --nopreflight"
        
        if(System.getenv('GITHUB_ACTION') != null ) {
           container = "ghcr.io/sanger-tol/longranger:2.2.2-c3"
        }
    }

    withName: BCFTOOLS_CONSENSUS {
        ext.args = '-i\'QUAL>1 && (GT="AA" || GT="Aa")\' -Hla'
    }

    withName: BCFTOOLS_INDEX {
        ext.args = '--tbi'
    }

    withName: BCFTOOLS_VIEW {
        ext.args = '--no-version -e\'type="ref"||REF~"N"\''
    }

    withName: BCFTOOLS_NORM {
        ext.args = '--no-version'
    }

    // Set up of the Hi-C read mapping pipeline
    withName: BWAMEM2_MEM {
        ext.args = { ( "${meta.datatype}" == "hic" ) ? "-5SPCp -R ${meta.read_group}" : "-R ${meta.read_group}" }
    }

    withName: SAMTOOLS_FASTQ {
        ext.args = '-F 0x200 -nt'
    }

    withName: SAMTOOLS_SORT {
        ext.prefix = { "${meta.id}.sorted" }
    }

    withName: SAMTOOLS_COLLATE {
        ext.prefix = { "${meta.id}.collated" }
    }

    withName: SAMTOOLS_FIXMATE {
        ext.args = '-m'
        ext.prefix = { "${meta.id}.fixmate" }
    }

    withName: SAMTOOLS_MARKDUP {
        ext.prefix = { "${meta.id}.markdup" }
    }

    withName: SAMTOOLS_VIEW {
        ext.args = "--output-fmt cram"
    }
    
    withName: SAMTOOLS_VIEW_MARKDUP {
        ext.args = "-u -F0x400 --output-fmt bam"
    }
    // End of Set up of the Hi-C read mapping pipeline

    // Set up of the scaffolding pipeline
        withName: 'COOLER_CLOAD' {
        ext.args = 'pairs -0 -c1 2 -p1 3 -c2 6 -p2 7'
    }

    withName: 'PRETEXT_SNAPSHOT' {
        ext.args = '--sequences \"=full\"'
    }

    withName: 'JUICER_TOOLS_PRE' {
        ext.juicer_tools_jar = 'juicer_tools.1.9.9_jcuda.0.8.jar'
        ext.juicer_jvm_params = '-Xms6g -Xmx48g'
    }

    withName: 'JUICER_SNAPSHOT' {
        ext.juicer_snapshot_jar = 'JuiceboxSnapshot-1.0.jar'
        ext.juicer_jvm_params = '-Xmx4g'
    }

    withName: 'JUICER_PRE' {
        ext.args2 = "LC_ALL=C sort -k2,2d -k6,6d -S50G | awk '\$3>=0 && \$7>=0'"
    }
    // End of Set up of the scaffolding pipeline
}
